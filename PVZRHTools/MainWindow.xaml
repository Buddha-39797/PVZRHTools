<Window x:Class="PVZRHTools.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PVZRHTools"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        mc:Ignorable="d"
        Height="450" Width="800"
        Icon="./PVZRHTools/icon.ico" WindowStyle="None" Background="#991A1A1A"
        Foreground="#FF282C34" BorderThickness="2,2,2,2" UseLayoutRounding="False"
        ResizeMode="NoResize" d:DataContext="{x:Type local:ModifierViewModel}">
    <Window.DataContext>
        <local:ModifierViewModel />
    </Window.DataContext>
    <Window.BorderBrush>
        <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
            <GradientStop Color="#7FFF3A3A" Offset="1" />
            <GradientStop Color="#7FFF3535" Offset="0" />
            <GradientStop Color="#7FF4FF31" Offset="0.135" />
            <GradientStop Color="#7FA845FF" Offset="0.857" />
            <GradientStop Color="#7F5BFF3A" Offset="0.274" />
            <GradientStop Color="#7F3E6DFF" Offset="0.709" />
            <GradientStop Color="#FF40E9FF" Offset="0.413" />
            <GradientStop Color="#7F3AC4FF" Offset="0.548" />
        </LinearGradientBrush>
    </Window.BorderBrush>
    <Grid>
        <Grid x:Name="TitleBar" Margin="0,0,0,402" PreviewMouseDown="TitleBar_PreviewMouseDown">
            <Label x:Name="WindowTitle" Content="" HorizontalAlignment="Left" Height="44" VerticalAlignment="Center" Width="748" Foreground="#FF2FA42F" FontSize="30" Margin="48,0,0,0" Style="{DynamicResource LabelBaseStyle}" />
            <Image x:Name="inf75" Margin="0,0,752,0" Source="/PVZRHTools/icon.png" Stretch="Fill" />
        </Grid>
        <TabControl TabStripPlacement="Left" Margin="0,49,0,0" BorderBrush="#FF212125" Background="#80212125" BorderThickness="0,0,0,0">

            <TabItem Header="全局特性修改">
                <Border Background="#FF212125" Margin="0,8,0,0" BorderBrush="#FF2FA42F" BorderThickness="2,2,2,2">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel>
                            <Expander Header="基本特性" Style="{DynamicResource Expander.Small}" MinWidth="28" MinHeight="28">
                                <Grid>
                                    <CheckBox x:Name="DeveloperMode" Content="开发者模式" Height="21" Margin="10,10,596,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=DeveloperMode}">
                                                <b:InvokeCommandAction Command="{Binding DeveloperMode}" CommandParameter="{Binding IsChecked, ElementName=DeveloperMode}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="GloveNoCD" Content="手套无CD" Height="21" Margin="119,10,492,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=GloveNoCD}">
                                                <b:InvokeCommandAction Command="{Binding GloveNoCD}" CommandParameter="{Binding IsChecked, ElementName=GloveNoCD}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="HammerNoCD" Content="锤子无CD" Height="21" Margin="213,10,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left" Width="83">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=HammerNoCD}">
                                                <b:InvokeCommandAction Command="{Binding HammerNoCD}" CommandParameter="{Binding IsChecked, ElementName=HammerNoCD}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="PlantingNoCD" IsChecked="{Binding FreeCD}" Content="植物卡槽无CD" Height="21" Margin="309,10,-289,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=PlantingNoCD}">
                                                <b:InvokeCommandAction Command="{Binding PlantingNoCD}" CommandParameter="{Binding IsChecked, ElementName=PlantingNoCD}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="FreePlanting" Content="自由种植" Height="21" Margin="10,36,10,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=FreePlanting}">
                                                <b:InvokeCommandAction Command="{Binding FreePlanting}" CommandParameter="{Binding IsChecked, ElementName=FreePlanting}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="UnlockAllFusions" Content="解锁全部融合配方" Height="21" Margin="97,36,-77,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=UnlockAllFusions}">
                                                <b:InvokeCommandAction Command="{Binding UnlockAllFusions}" CommandParameter="{Binding IsChecked, ElementName=UnlockAllFusions}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>

                                    <Label x:Name="SpeedLabel" Content="{Binding SpeedText}" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,62,0,0" />
                                    <Slider x:Name="SpeedSlider" IsSelectionRangeEnabled="True" HorizontalAlignment="Left" Height="17" VerticalAlignment="Top" Width="154" Foreground="White" BorderBrush="Transparent" Background="#FF00FFCA" IsSnapToTickEnabled="True" SmallChange="1" Maximum="9" Value="4" TickFrequency="1" Style="{DynamicResource SliderBaseStyle}" Margin="119,63,0,0">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding Value, ElementName=SpeedSlider}">
                                                <b:InvokeCommandAction Command="{Binding GameSpeed}" CommandParameter="{Binding Value, ElementName=SpeedSlider}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </Slider>
                                </Grid>
                            </Expander>
                            <Expander Header="礼盒修改" Style="{DynamicResource Expander.Small}" MinWidth="28" MinHeight="28">
                                <Grid>
                                    <CheckBox x:Name="SuperPresent" Content="超级礼盒" Height="21" Margin="10,10,574,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=SuperPresent}">
                                                <b:InvokeCommandAction Command="{Binding SuperPresent}" CommandParameter="{Binding IsChecked, ElementName=SuperPresent}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="UltimateRamdomZombie" Content="普通盒子僵尸、黄金盒子僵尸概率出究极僵尸" Height="21" Margin="95,10,293,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=UltimateRamdomZombie}">
                                                <b:InvokeCommandAction Command="{Binding UltimateRamdomZombie}" CommandParameter="{Binding IsChecked, ElementName=UltimateRamdomZombie}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="PresentFastOpen" Content="礼盒快速打开" Height="21" Margin="376,10,177,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=PresentFastOpen}">
                                                <b:InvokeCommandAction Command="{Binding PresentFastOpen}" CommandParameter="{Binding IsChecked, ElementName=PresentFastOpen}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <ComboBox hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="锁定礼盒植物：" hc:TitleElement.TitleWidth="90" x:Name="LockPresent" HorizontalAlignment="Left" Height="26" Margin="10,36,0,0" Width="217" SelectedValuePath="Key" DisplayMemberPath="Value" ItemsSource="{Binding Plants}" Style="{DynamicResource ComboBoxExtend}" VerticalAlignment="Top">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding SelectedValue, ElementName=LockPresent}">
                                                <b:InvokeCommandAction Command="{Binding LockPresent}" CommandParameter="{Binding SelectedValue, ElementName=LockPresent}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </ComboBox>
                                </Grid>
                            </Expander>
                            <Expander Header="数值修改" Style="{DynamicResource Expander.Small}" MinWidth="28" MinHeight="28">
                                <Grid>
                                    <Label Content="设为-1以还原数值" HorizontalAlignment="Left" Margin="0,2,0,0" VerticalAlignment="Top" Foreground="White" />
                                    <ComboBox hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="植物初始血量修改：" hc:TitleElement.TitleWidth="115" x:Name="HealthPlantType" HorizontalAlignment="Left" Height="20" Margin="10,32,0,0" VerticalAlignment="Top" Width="236" SelectedValuePath="Key" DisplayMemberPath="Value" ItemsSource="{Binding Plants2, Mode=OneWay}" SelectedValue="{Binding HealthPlantType}" Style="{DynamicResource ComboBoxExtend}" />
                                    <TextBox x:Name="HealthPlantValue" HorizontalAlignment="Left" Margin="251,32,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="60" Height="20" Text="{Binding HealthPlantValue}" />
                                    <ComboBox hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="僵尸初始血量修改：" hc:TitleElement.TitleWidth="115" x:Name="HealthZombieType" HorizontalAlignment="Left" Height="20" Margin="10,62,0,0" VerticalAlignment="Top" Width="236" SelectedValuePath="Key" DisplayMemberPath="Value" ItemsSource="{Binding Zombies, Mode=OneWay}" SelectedValue="{Binding HealthZombieType}" Style="{DynamicResource ComboBoxExtend}" />
                                    <ComboBox hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="一类防具血量修改：" hc:TitleElement.TitleWidth="115" x:Name="Health1stType" HorizontalAlignment="Left" Height="20" Margin="10,92,0,0" VerticalAlignment="Top" Width="236" SelectedValuePath="Key" DisplayMemberPath="Value" ItemsSource="{Binding FirstArmor, Mode=OneWay}" SelectedValue="{Binding Health1stType}" Style="{DynamicResource ComboBoxExtend}" />
                                    <ComboBox hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="二类防具血量修改：" hc:TitleElement.TitleWidth="115" x:Name="Health2ndType" HorizontalAlignment="Left" Height="20" Margin="10,123,0,0" VerticalAlignment="Top" Width="236" SelectedValuePath="Key" DisplayMemberPath="Value" ItemsSource="{Binding SecondArmor, Mode=OneWay}" SelectedValue="{Binding Health2ndType}" Style="{DynamicResource ComboBoxExtend}" />
                                    <ComboBox hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="子弹伤害值修改：" hc:TitleElement.TitleWidth="115" x:Name="bulletDamageType" HorizontalAlignment="Left" Height="20" Margin="10,155,0,0" VerticalAlignment="Top" Width="236" SelectedValuePath="Key" DisplayMemberPath="Value" ItemsSource="{Binding Bullets, Mode=OneWay}" SelectedValue="{Binding BulletDamageType}" Style="{DynamicResource ComboBoxExtend}" />
                                    <TextBox x:Name="HealthZombieValue" HorizontalAlignment="Left" Margin="251,62,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="60" Height="20" Text="{Binding HealthZombieValue}" />
                                    <TextBox x:Name="Health1stValue" HorizontalAlignment="Left" Margin="251,92,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="60" Height="20" Text="{Binding Health1stValue}" />
                                    <TextBox x:Name="Health2ndValue" HorizontalAlignment="Left" Margin="251,123,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="60" Height="20" Text="{Binding Health2ndValue}" />
                                    <TextBox x:Name="bulletDamageValue" HorizontalAlignment="Left" Margin="251,155,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="60" Height="20" Text="{Binding BulletDamageValue}" />
                                    <Button x:Name="hpbutton" Content="修改" Height="30" Margin="0,32,0,0" VerticalAlignment="Top" Width="70" Command="{Binding SetHealthPlant}" />
                                    <Button x:Name="hzbutton" Content="修改" Height="30" Margin="0,62,0,0" VerticalAlignment="Top" Width="70" Command="{Binding SetHealthZombie}" />
                                    <Button x:Name="h1button" Content="修改" Height="30" Margin="0,92,0,0" VerticalAlignment="Top" Width="70" Command="{Binding SetHealth1st}" />
                                    <Button x:Name="h2button" Content="修改" Height="30" Margin="0,123,0,0" VerticalAlignment="Top" Width="70" Command="{Binding SetHealth2nd}" />
                                    <Button x:Name="bulletbutton" Content="修改" Height="30" Margin="0,155,0,0" VerticalAlignment="Top" Width="70" Command="{Binding SetBulletDamage}" />
                                    <ComboBox hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="锁定全部子弹类型：" hc:TitleElement.TitleWidth="115" x:Name="LockBulletType" HorizontalAlignment="Left" Height="20" Margin="10,187,0,0" VerticalAlignment="Top" Width="236" SelectedValuePath="Key" DisplayMemberPath="Value" SelectedItem="{Binding LockBullet}" ItemsSource="{Binding Bullets2}" Style="{DynamicResource ComboBoxExtend}" />
                                    <Button x:Name="lockBulletButton" Content="修改" Height="30" Margin="251,187,0,0" VerticalAlignment="Top" Width="134" Command="{Binding SetLockBullet}" HorizontalAlignment="Left" />
                                </Grid>
                            </Expander>
                            <Expander Header="关卡特性附加" Style="{DynamicResource Expander.Small}" MinWidth="28" MinHeight="28">
                                <Grid>
                                    <CheckBox x:Name="ColumnPlanting" Content="排山倒海" Height="21" Margin="110,10,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" IsChecked="{Binding ColumnPlanting}" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=ColumnPlanting}">
                                                <b:InvokeCommandAction Command="{Binding SetGameModes}" CommandParameter="{Binding IsChecked, ElementName=ColumnPlanting}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="SeedRain" Content="种子雨" Height="21" Margin="205,10,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" IsChecked="{Binding SeedRain}" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=SeedRain}">
                                                <b:InvokeCommandAction Command="{Binding SetGameModes}" CommandParameter="{Binding IsChecked, ElementName=SeedRain}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="Exchange" Content="等价交换" Height="21" Margin="284,10,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" IsChecked="{Binding Exchange}" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=Exchange}">
                                                <b:InvokeCommandAction Command="{Binding SetGameModes}" CommandParameter="{Binding IsChecked, ElementName=Exchange}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="Shooting1" Content="诸神1" Height="21" Margin="10,36,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" IsChecked="{Binding Shooting1}" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=Shooting1}">
                                                <b:InvokeCommandAction Command="{Binding SetGameModes}" CommandParameter="{Binding IsChecked, ElementName=Shooting1}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="Shooting2" Content="诸神2" Height="21" Margin="78,36,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" IsChecked="{Binding Shooting2}" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=Shooting2}">
                                                <b:InvokeCommandAction Command="{Binding SetGameModes}" CommandParameter="{Binding IsChecked, ElementName=Shooting2}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="Shooting3" Content="诸神3" Height="21" Margin="153,36,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" IsChecked="{Binding Shooting3}" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=Shooting3}">
                                                <b:InvokeCommandAction Command="{Binding SetGameModes}" CommandParameter="{Binding IsChecked, ElementName=Shooting3}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="Shooting4" Content="诸神：全军出击" Height="21" Margin="224,36,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" IsChecked="{Binding Shooting4}" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=Shooting4}">
                                                <b:InvokeCommandAction Command="{Binding SetGameModes}" CommandParameter="{Binding IsChecked, ElementName=Shooting4}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="ScaredyDream" Content="胆小菇之梦" Height="21" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" Margin="10,10,0,0" IsChecked="{Binding ScaredyDream}" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=ScaredyDream}">
                                                <b:InvokeCommandAction Command="{Binding SetGameModes}" CommandParameter="{Binding IsChecked, ElementName=ScaredyDream}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                </Grid>
                            </Expander>
                            <Expander Header="场地特性" Style="{DynamicResource Expander.Small}" MinWidth="28" MinHeight="28">
                                <Grid>
                                    <CheckBox x:Name="NoIceRoad" Content="不生成冰道" Height="21" Margin="10,10,10,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=NoIceRoad}">
                                                <b:InvokeCommandAction Command="{Binding NoIceRoad}" CommandParameter="{Binding IsChecked, ElementName=NoIceRoad}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="ItemExistForever" Content="物品不消失" Height="21" Margin="127,10,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=ItemExistForever}">
                                                <b:InvokeCommandAction Command="{Binding ItemExistForever}" CommandParameter="{Binding IsChecked, ElementName=ItemExistForever}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="CardNoInit" Content="卡槽无初始CD" Height="21" Margin="239,10,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=CardNoInit}">
                                                <b:InvokeCommandAction Command="{Binding CardNoInit}" CommandParameter="{Binding IsChecked, ElementName=CardNoInit}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="JackboxNotExplode" Content="小丑盒子不爆" Height="21" Margin="369,10,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=JackboxNotExplode}">
                                                <b:InvokeCommandAction Command="{Binding JackboxNotExplode}" CommandParameter="{Binding IsChecked, ElementName=JackboxNotExplode}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="GarlicDay" Content="大蒜天" Height="21" Margin="499,10,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=GarlicDay}">
                                                <b:InvokeCommandAction Command="{Binding GarlicDayCommand}" CommandParameter="{Binding IsChecked, ElementName=GarlicDay}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                </Grid>
                            </Expander>
                            <Expander Header="植物特性" Style="{DynamicResource Expander.Small}" MinWidth="28" MinHeight="28">
                                <Grid>
                                    <CheckBox x:Name="FastShooting" Content="植物攻击无间隔(部分植物受动画限制无法生效)" Height="21" Margin="10,10,10,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=FastShooting}">
                                                <b:InvokeCommandAction Command="{Binding FastShooting}" CommandParameter="{Binding IsChecked, ElementName=FastShooting}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="HardPlant" Content="植物无敌" Height="21" Margin="296,10,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=HardPlant}">
                                                <b:InvokeCommandAction Command="{Binding HardPlant}" CommandParameter="{Binding IsChecked, ElementName=HardPlant}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="NoHole" Content="不生成坑洞" Height="20" Margin="390,10,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=NoHole}">
                                                <b:InvokeCommandAction Command="{Binding NoHole}" CommandParameter="{Binding IsChecked, ElementName=NoHole}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="HyponoEmperorNoCD" Content="魅帝菇无CD" Height="21" Margin="10,36,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=HyponoEmperorNoCD}">
                                                <b:InvokeCommandAction Command="{Binding HyponoEmperorNoCD}" CommandParameter="{Binding IsChecked, ElementName=HyponoEmperorNoCD}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="MineNoCD" Content="地雷无CD" Height="21" Margin="118,36,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=MineNoCD}">
                                                <b:InvokeCommandAction Command="{Binding MineNoCD}" CommandParameter="{Binding IsChecked, ElementName=MineNoCD}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="ChomperNoCD" Content="大嘴花无CD" Height="21" Margin="214,36,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=ChomperNoCD}">
                                                <b:InvokeCommandAction Command="{Binding ChomperNoCD}" CommandParameter="{Binding IsChecked, ElementName=ChomperNoCD}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="CobCannonNoCD" Content="玉米加农炮无CD" Height="21" Margin="321,36,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=CobCannonNoCD}">
                                                <b:InvokeCommandAction Command="{Binding CobCannonNoCD}" CommandParameter="{Binding IsChecked, ElementName=CobCannonNoCD}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="UndeadBullet" Content="子弹无限穿透" Height="21" Margin="493,10,0,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=UndeadBullet}">
                                                <b:InvokeCommandAction Command="{Binding UndeadBulletCommand}" CommandParameter="{Binding IsChecked, ElementName=UndeadBullet}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                </Grid>
                            </Expander>
                            <Label Height="168" Width="684" Foreground="White">
                                <TextBlock FontSize="16" Foreground="#FF2FA42F" Height="208" Width="648" ><Run Text="此修改器完全免费" /><Run Text="。若有付费/要求三连+关注/私信发链接的情况，说明你" /><Run Text="被骗了" /><Run Text="，" /><LineBreak /><Run /><Run Text="请" /><Run Text="注意" /><Run Language="zh-cn" Text="隐私和" /><Run Text="财产安全" /><Run Text="！" /><Run Text="&#xA;在b站的视频或直播中使用本修改器时，如果你愿意可以注上修改器作者的名字@Infinite75&#xA;关闭控制台输出窗口、游戏窗口、修改窗口中任何一个都会整体关闭游戏，小心误触" /><LineBreak /></TextBlock>
                            </Label>
                        </StackPanel>
                    </ScrollViewer>
                </Border>
            </TabItem>

            <TabItem Header="游戏内操作">
                <Border Background="#00212125" Margin="0,8,0,0" BorderBrush="#FF2FA42F" BorderThickness="2,2,2,2">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto">
                        <StackPanel>
                            <Expander Header="生成操作" Width="703">
                                <Grid>
                                    <hc:NumericUpDown DecimalPlaces="0" hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="行：" hc:TitleElement.TitleWidth="30" x:Name="Row" HorizontalAlignment="Left" Margin="190,3,0,0" VerticalAlignment="Top" Width="90" Value="{Binding Row}" Maximum="12" Minimum="0" Style="{DynamicResource NumericUpDownExtend}" />
                                    <Label Content="行、列号设为0表示整行/整列" HorizontalAlignment="Left" Margin="0,3,0,0" VerticalAlignment="Top" Foreground="White" />
                                    <hc:NumericUpDown DecimalPlaces="0" hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="列：" hc:TitleElement.TitleWidth="30" x:Name="Column" HorizontalAlignment="Left" Margin="285,3,0,0"  VerticalAlignment="Top" Width="90" Value="{Binding Col}" Maximum="10" Minimum="0" Style="{DynamicResource NumericUpDownExtend}" />
                                    <hc:NumericUpDown DecimalPlaces="0" hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="重复执行次数：" hc:TitleElement.TitleWidth="100" x:Name="Times" HorizontalAlignment="Left" Margin="380,3,0,0" VerticalAlignment="Top" Width="224" Value="{Binding Times}" Maximum="50" Minimum="1" Style="{DynamicResource NumericUpDownExtend}" />
                                    <hc:ElementGroup Orientation="Horizontal" Layout="Stack" Margin="0,36,0,0" Width="552" HorizontalAlignment="Left" Style="{DynamicResource ElementGroupSolid}">
                                        <Button x:Name="CreatePlant" Content="生成植物" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="68" Command="{Binding CreatePlant}" Style="{DynamicResource ButtonGroupItemHorizontalFirst}" />
                                        <ComboBox x:Name="PlantType" SelectedValuePath="Key" DisplayMemberPath="Value" ItemsSource="{Binding Plants2}" SelectedValue="{Binding PlantType}" Style="{DynamicResource ComboBoxExtend}" Width="150" HorizontalAlignment="Left" VerticalContentAlignment="Center" Margin="-34,0,0,0" VerticalAlignment="Center" Height="30" />
                                        <Button x:Name="CreateCard" Content="生成植物卡片" Width="122" Command="{Binding CreateCard}" Height="30" />
                                        <Button x:Name="SimplePresents" Content="斗蛐蛐快速布阵(5礼盒+5僵尸礼盒)" Width="215" Command="{Binding SimplePresents}" Height="30" />
                                    </hc:ElementGroup>
                                    <hc:ElementGroup Orientation="Horizontal" Layout="Stack" Margin="0,66,0,0" Width="217" HorizontalAlignment="Left">
                                        <Button x:Name="createZombie" Content="生成僵尸" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="68" Command="{Binding CreateZombie}" />
                                        <ComboBox x:Name="ZombieType" HorizontalAlignment="Left" Height="30" VerticalAlignment="Center" Width="150" SelectedValuePath="Key" DisplayMemberPath="Value" ItemsSource="{Binding Zombies}" SelectedValue="{Binding ZombieType}" />
                                    </hc:ElementGroup>
                                    <CheckBox x:Name="IsMindCtrl" Content="生成魅惑僵尸" Height="30" Foreground="White"  BorderThickness="2,2,2,2" IsChecked="{Binding IsMindCtrl}" Style="{DynamicResource CheckBoxBaseStyle}" BorderBrush="#FF3F3F46" Margin="217,66,369,0" VerticalAlignment="Top" />

                                    <hc:ElementGroup Orientation="Horizontal" Layout="Stack" Margin="0,95,0,0" HorizontalAlignment="Left">
                                        <Button x:Name="CreateItem" Content="生成物品" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="68" Command="{Binding CreateItem}" />
                                        <ComboBox x:Name="ItemType" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="150" SelectedValuePath="Key" DisplayMemberPath="Value" SelectedValue="{Binding ItemType}" ItemsSource="{Binding Items, Mode=OneWay}" />
                                    </hc:ElementGroup>

                                    <hc:ButtonGroup Height="30" Margin="231,96,270,0" Style="{DynamicResource ButtonGroupSolid}">
                                        <Button x:Name="CreatePassiveMateorite" Content="普通陨星" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="69" Command="{Binding CreatePassiveMateorite}" Style="{DynamicResource ButtonGroupItemHorizontalFirst}" />
                                        <Button x:Name="CreateActiveMateorite" Content="充能陨星" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="68" Command="{Binding CreateActiveMateorite}" Style="{DynamicResource ButtonGroupItemDefault}" />
                                        <Button x:Name="CreateUltimateMateorite" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="68" Content="究极陨星" Command="{Binding CreateUltimateMateorite}" Style="{DynamicResource ButtonGroupItemHorizontalLast}" />
                                    </hc:ButtonGroup>
                                    <Label Content="植物布阵：" HorizontalAlignment="Left" Margin="0,145,0,0" VerticalAlignment="Top" Height="30" Width="89" />
                                    <Button x:Name="ReadField" HorizontalAlignment="Left" Height="30" Margin="89,144,0,0" VerticalAlignment="Top" Width="173" Content="复制当前阵型代码至剪贴板" Command="{Binding CopyFieldScripts}" />
                                    <CheckBox x:Name="ClearOnWritingField" Content="布阵时清空场地" Height="30" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" IsChecked="{Binding ClearOnWritingField}" HorizontalAlignment="Left"  Margin="269,145,0,0" />

                                    <hc:ElementGroup Orientation="Horizontal" Layout="Stack" Margin="0,174,0,0" Height="30" HorizontalAlignment="Left">
                                        <Button x:Name="WriteField" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="105" Content="根据代码布阵" Command="{Binding WriteField}" />

                                        <hc:TextBox hc:InfoElement.ShowClearButton="True" x:Name="FieldString" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Top" Width="488" Text="{Binding FieldString}" Height="30" />
                                    </hc:ElementGroup>
                                    <Label Content="僵尸布阵：" HorizontalAlignment="Left" Margin="0,203,0,0" VerticalAlignment="Top" Height="30" Width="89" />
                                    <Button x:Name="ReadFieldZombies" HorizontalAlignment="Left" Height="30" Margin="89,204,0,0" VerticalAlignment="Top" Width="173" Content="复制当前阵型代码至剪贴板" Command="{Binding CopyZombieScriptsCommand}" />
                                    <CheckBox x:Name="ClearZombiesOnWritingField" Content="布阵时清空场地" Height="30" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" IsChecked="{Binding ClearOnWritingZombies}" HorizontalAlignment="Left" Margin="269,203,0,0" />

                                    <hc:ElementGroup Orientation="Horizontal" Layout="Stack" Margin="0,233,0,0" Height="30" HorizontalAlignment="Left">
                                        <Button x:Name="WriteFieldZombies" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="105" Content="根据代码布阵" Command="{Binding WriteZombiesCommand}" />

                                        <hc:TextBox hc:InfoElement.ShowClearButton="True" x:Name="FieldStringZombies" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Top" Width="488" Text="{Binding ZombieFieldString}" Height="30" />
                                    </hc:ElementGroup>
                                </Grid>
                            </Expander>
                            <Expander Header="僵尸海">
                                <StackPanel>
                                    <CheckBox x:Name="ZombieSea" Content="极限僵尸海" Height="21" Foreground="White"  BorderThickness="2,2,2,2" IsChecked="{Binding ZombieSea}" Width="126" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=ZombieSea}">
                                                <b:InvokeCommandAction Command="{Binding SetZombieSea}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <hc:NumericUpDown DecimalPlaces="0" hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="生成间隔帧数：" hc:TitleElement.TitleWidth="90" x:Name="FpCreate" Width="167" Value="{Binding ZombieSeaCD}" Maximum="1000" Minimum="10" Style="{DynamicResource NumericUpDownExtend}" HorizontalAlignment="Left">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding Value, ElementName=FpCreate}">
                                                <b:InvokeCommandAction Command="{Binding SetZombieSea}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </hc:NumericUpDown>
                                    <hc:CheckComboBox local:SelectedItemsExt.SelectedItems="{Binding ZombieSeaTypes,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="僵尸类型：" hc:TitleElement.TitleWidth="80" Style="{DynamicResource CheckComboBoxExtend}" ItemsSource="{Binding Zombies}" SelectedValuePath="Key" DisplayMemberPath="Value" Width="361" HorizontalAlignment="Left" IsSynchronizedWithCurrentItem="True" />
                                </StackPanel>
                            </Expander>
                            <Expander Header="游戏状态调整">
                                <Grid>
                                    <Button x:Name="ChagneSun" Content="修改阳光" HorizontalAlignment="Left" Height="30" Margin="10,10,0,0" VerticalAlignment="Top" Width="75" Command="{Binding SetSun, ValidatesOnNotifyDataErrors=True}" />
                                    <hc:NumericUpDown x:Name="Sun" HorizontalAlignment="Left" Margin="90,10,0,0" VerticalAlignment="Top" Width="94" Height="30" Value="{Binding Sun}" Increment="100" Maximum="2147483647" Minimum="0" />
                                    <CheckBox x:Name="LockSun" Content="锁定阳光" Height="21" Margin="189,17,437,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=LockSun}">
                                                <b:InvokeCommandAction Command="{Binding LockSun}" CommandParameter="{Binding IsChecked, ElementName=LockSun}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <Button x:Name="ChangeMoney" Content="修改钱数" HorizontalAlignment="Left" Height="30" Margin="275,12,0,0" VerticalAlignment="Top" Width="75" Command="{Binding SetMoney, ValidatesOnNotifyDataErrors=True}" />
                                    <hc:NumericUpDown x:Name="Money" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="94" Height="30" Value="{Binding Money}" Increment="100" Maximum="99999" Minimum="0" Margin="356,12,0,0" />
                                    <CheckBox x:Name="LockMoney" Content="锁定钱数" Height="21" Margin="455,17,166,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=LockMoney}">
                                                <b:InvokeCommandAction Command="{Binding LockMoney}" CommandParameter="{Binding IsChecked, ElementName=LockMoney}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <Button x:Name="NextWave" Content="生成下一波僵尸" HorizontalAlignment="Left" Height="30" Margin="10,91,0,0" VerticalAlignment="Top" Width="167" Command="{Binding NextWave}" />
                                    <CheckBox x:Name="StopSummon" Content="暂停出怪" Height="21" Margin="182,96,437,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=StopSummon}">
                                                <b:InvokeCommandAction Command="{Binding StopSummon}" CommandParameter="{Binding IsChecked, ElementName=StopSummon}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <CheckBox x:Name="NoFail" Content="僵尸进家不死，勾选仅在本局生效" Height="21" Margin="263,96,228,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=NoFail}">
                                                <b:InvokeCommandAction Command="{Binding NoFail}" CommandParameter="{Binding IsChecked, ElementName=NoFail}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                    <hc:ButtonGroup Margin="10,51,74,0" Height="30">
                                        <Button x:Name="ClearAllPlants" Content="清除全部植物" Command="{Binding ClearAllPlants}" Style="{DynamicResource ButtonGroupItemHorizontalFirst}" />
                                        <Button x:Name="KillAllZombies" Content="秒杀全部僵尸" Command="{Binding KillAllZombies}" Margin="0,0,0,0" Style="{DynamicResource ButtonGroupItemDefault}" />
                                        <Button x:Name="ClearIce" Content="清除所有冰道" Command="{Binding ClearIceRoads}" Style="{DynamicResource ButtonGroupItemDefault}" />
                                        <Button x:Name="MindCtrlAll" Content="魅惑全部僵尸" Command="{Binding MindCtrlAll}" Style="{DynamicResource ButtonGroupItemDefault}" />
                                        <Button x:Name="ClearAllHoles" Content="清除所有坑洞" Command="{Binding ClearAllHoles}" Style="{DynamicResource ButtonGroupItemDefault}" />
                                        <Button x:Name="Win" Content="直接过关" Command="{Binding Win}" Style="{DynamicResource ButtonGroupItemHorizontalLast}" />
                                    </hc:ButtonGroup>
                                    <Button x:Name="ChangeLevelName" Content="修改关卡名称" HorizontalAlignment="Left" Height="30" Margin="12,136,0,0" VerticalAlignment="Top" Width="106" Command="{Binding SetLevelName}" />
                                    <TextBox x:Name="LevelName" HorizontalAlignment="Left" Margin="133,138,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="229" Height="20" Text="{Binding LevelName}" />
                                    <Button x:Name="ShowText" Content="显示字幕" HorizontalAlignment="Left" Height="30" Margin="12,171,0,0" VerticalAlignment="Top" Width="106" Command="{Binding ShowingText}" />
                                    <TextBox x:Name="Text" HorizontalAlignment="Left" Margin="133,171,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="229" Height="20" Text="{Binding ShowText}" />
                                </Grid>
                            </Expander>
                        </StackPanel>
                    </ScrollViewer>
                </Border>
            </TabItem>
            <TabItem Header="旅行词条修改">
                <Border Background="#FF212125" Margin="0,8,0,0" BorderBrush="#FF2FA42F" BorderThickness="2,2,2,2">
                    <hc:ScrollViewer HorizontalScrollBarVisibility="Auto" Height="385" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                        <StackPanel>
                            <Expander Header="初始词条设置">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="此页面中词条在每局游戏开始时/生存模式第1轮作为初始词条自动添加，局内修改无效" Foreground="White" Height="27" Width="485" />

                                        <hc:ButtonGroup>
                                            <Button Content="全选" Command="{Binding TravelBuffSelectAllCommand}" />
                                            <Button Content="全不选" Command="{Binding TravelBuffUnselectAllCommand}" />
                                        </hc:ButtonGroup>
                                    </StackPanel>
                                    <DataGrid hc:DataGridAttach.ShowSelectAllButton="True" x:Name="TravelBuffs" Background="#FF212125" ItemsSource="{Binding TravelBuffs}" AutoGenerateColumns="False" HeadersVisibility="None" CanUserAddRows="False" CanUserDeleteRows="False"  CanUserResizeRows="False" CanUserSortColumns="False" CanUserResizeColumns="False" CanUserReorderColumns="False"  Style="{DynamicResource DataGrid.Small}" PreviewMouseWheel="DataGrid_PreviewMouseWheel">
                                        <DataGrid.Columns>
                                            <DataGridCheckBoxColumn Binding="{Binding Enabled,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                                <DataGridCheckBoxColumn.ElementStyle>
                                                    <Style />
                                                </DataGridCheckBoxColumn.ElementStyle>
                                            </DataGridCheckBoxColumn>

                                            <DataGridTextColumn IsReadOnly="True" Binding="{Binding TravelBuff.Text}" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </Expander>
                            <Expander Header="词条实时修改">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="此页面中词条与游戏实时同步，可任意增删词条，但仅对本局有效" Foreground="White" Height="27" Width="382" />

                                        <hc:ButtonGroup>
                                            <Button Content="全选" Command="{Binding InGameBuffSelectAllCommand}" />
                                            <Button Content="全不选" Command="{Binding InGameBuffUnselectAllCommand}" />
                                        </hc:ButtonGroup>
                                    </StackPanel>
                                    <DataGrid x:Name="InGameBuffs" AutoGenerateColumns="False" HeadersVisibility="None" ItemsSource="{Binding InGameBuffs}" CanUserAddRows="False" CanUserDeleteRows="False"  CanUserResizeRows="False" CanUserSortColumns="False" CanUserResizeColumns="False" CanUserReorderColumns="False" Background="#FF1A1A1A" Style="{DynamicResource DataGrid.Small}" PreviewMouseWheel="DataGrid_PreviewMouseWheel">
                                        <DataGrid.Columns>
                                            <DataGridCheckBoxColumn Binding="{Binding Enabled,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                                <DataGridCheckBoxColumn.ElementStyle>
                                                    <Style />
                                                </DataGridCheckBoxColumn.ElementStyle>
                                            </DataGridCheckBoxColumn>
                                            <DataGridTextColumn IsReadOnly="True" Binding="{Binding TravelBuff.Text}" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </Expander>
                        </StackPanel>
                    </hc:ScrollViewer>
                </Border>
            </TabItem>
            <TabItem Header="卡槽替换">
                <Border Background="#FF212125" Margin="0,8,0,0" BorderBrush="#FF2FA42F" BorderThickness="2,2,2,2">
                    <hc:ScrollViewer HorizontalScrollBarVisibility="Auto" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                        <StackPanel>
                            <DataGrid x:Name="CardReplaces" Background="#FF1A1A1A" ItemsSource="{Binding CardReplaces}" AutoGenerateColumns="False">
                                <DataGrid.Columns>
                                    <DataGridCheckBoxColumn Header="是否应用" Binding="{Binding CardUI.SetEnabled,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <DataGridCheckBoxColumn.ElementStyle>
                                            <Style />
                                        </DataGridCheckBoxColumn.ElementStyle>
                                    </DataGridCheckBoxColumn>
                                    <DataGridTemplateColumn Header="原植物类型">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox SelectedValue="{Binding CardUI.ID,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" ItemsSource="{Binding Source={x:Static local:ModifierViewModel.Plants}}" DisplayMemberPath="Value" SelectedValuePath="Key" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="新植物类型">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox SelectedValue="{Binding CardUI.NewID,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" ItemsSource="{Binding Source={x:Static local:ModifierViewModel.Plants}}" DisplayMemberPath="Value" SelectedValuePath="Key" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="自定义阳光">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <hc:NumericUpDown Maximum="2147483647" Minimum="-1" Increment="25" DecimalPlaces="0" Value="{Binding CardUI.Sun,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="自定义冷却时间">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <hc:NumericUpDown Maximum="10000" Minimum="-1" Increment="1" DecimalPlaces="2" Value="{Binding CardUI.CD,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </hc:ScrollViewer>
                </Border>
            </TabItem>
            <TabItem Header="按键表">
                <Border Background="#FF212125" Margin="0,8,0,0" BorderBrush="#FF2FA42F" BorderThickness="2,2,2,2">
                    <Grid>
                        <TextBlock TextWrapping="Wrap" Margin="10,10,54,14" Foreground="Cyan"><Run Text="部分功能需提前填好数据，游戏运行时其他软件中下列键位均失效" /><Run Text="，可能导致冲突" /><Run Text="，改键位太麻烦暂时没做" /><LineBreak /><Run /><Run Text="高级时停：5" /><Run Text="或" /><Run Language="zh-cn" Text="R" /><LineBreak /><Run Text="卡槽置顶：Tab" /><LineBreak /><Run Text="刷怪时间显示：`" /><LineBreak /><Run Text="生成植物：" /><Run Text="Shift+" /><Run Text="Alt+A" /><LineBreak /><Run Text="生成僵尸：" /><Run Text="Shift+" /><Run Text="Alt+S" /><LineBreak /><Run Text="生成物品：" /><Run Text="Shift+" /><Run Text="Alt+D" /><LineBreak /><Run Text="究极陨星：" /><Run Text="Shift+" /><Run Text="Alt+" /><Run Text="H" /><LineBreak /><Run Text="植物布阵：Alt+" /><Run Text="J" /><LineBreak /><Run Text="僵尸布阵：Alt+" /><Run Text="K" /><LineBreak /><Run Text="僵尸海：Alt+" /><Run Text="L" /><LineBreak /><Run Text="秒杀全部僵尸：Alt+" /><Run Text="F1" /><LineBreak /><Run Text="清除全部植物：Alt+" /><Run Text="F" /><Run Text="2" /><LineBreak /><Run Text="魅惑全部僵尸：Alt+F3" /><LineBreak /><Run Text="下一波：Alt+F6" /><LineBreak /><Run Text="修改关卡名称：Alt+N" /><LineBreak /><Run Text="显示字幕：Alt+M" /><LineBreak /><Run Text="自由种植：Alt+F9" /><LineBreak /><Run /></TextBlock>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="设置">
                <Border Background="#FF212125" Margin="0,8,0,0" BorderBrush="#FF2FA42F" BorderThickness="2,2,2,2">
                    <hc:ScrollViewer HorizontalScrollBarVisibility="Auto">
                        <StackPanel>
                            <Expander Header="辅助功能" Width="700">
                                <Grid>
                                    <CheckBox x:Name="SaveAndResume" Content="关闭时保存现有设置（数值修改与游戏内词条修改除外）（待实现）" IsChecked="{Binding NeedSave}" Height="21" Margin="10,10,301,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2" IsEnabled="False" />

                                    <CheckBox x:Name="TopMostSprite" Content="悬浮窗，双击使修改窗口前置，推荐全屏时使用" Height="21" Margin="10,36,402,0" VerticalAlignment="Top" Foreground="White"  BorderThickness="2,2,2,2">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=TopMostSprite}">
                                                <b:InvokeCommandAction Command="{Binding TopMostSpriteCommand}" CommandParameter="{Binding IsChecked, ElementName=TopMostSprite}" />
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </CheckBox>
                                </Grid>
                            </Expander>
                            <Expander Header="按键绑定修改（待实现）" IsEnabled="False">
                            </Expander>
                        </StackPanel>
                    </hc:ScrollViewer>
                </Border>
            </TabItem>
        </TabControl>
    </Grid>
</Window>